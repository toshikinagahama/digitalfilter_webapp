import Head from 'next/head';
import { useState } from 'react';

export default function IIR_bandpass() {
  const [sfreq, setSfreq] = useState('25');
  const [freq1_pass, setFreq1_pass] = useState('0.08');
  const [freq2_pass, setFreq2_pass] = useState('0.4');
  const [freq1_cutoff, setFreq1_cutoff] = useState('0.001');
  const [freq2_cutoff, setFreq2_cutoff] = useState('5');
  const [gain_pass, setGain_pass] = useState('5');
  const [gain_cutoff, setGain_cutoff] = useState('30');
  const [input_data_str, setInput_data_str] = useState('');
  const [coefA, setCoefA] = useState('');
  const [coefB, setCoefB] = useState('');
  const [output_data_str, setOutput_data_str] = useState('');
  const [filterd_img_src, setFilterd_img_src] = useState('');

  const handleSfreqChanged = (e) => {
    setSfreq(e.target.value);
  };

  const handleFreq1_passChanged = (e) => {
    setFreq1_pass(e.target.value);
  };

  const handleFreq2_passChanged = (e) => {
    setFreq2_pass(e.target.value);
  };

  const handleFreq1_cutoffChanged = (e) => {
    setFreq1_cutoff(e.target.value);
  };

  const handleFreq2_cutoffChanged = (e) => {
    setFreq2_cutoff(e.target.value);
  };

  const handleGain_passChanged = (e) => {
    setGain_pass(e.target.value);
  };

  const handleGain_cutoffChanged = (e) => {
    setGain_cutoff(e.target.value);
  };

  const handleInput_data_strChanged = (e) => {
    setInput_data_str(e.target.value);
  };

  const handleCalculateButtonClicked = async (e) => {
    let tmp_input_data_str = input_data_str.replace(/,/g, '');
    tmp_input_data_str = tmp_input_data_str.replace(/\r/g, '');
    tmp_input_data_str = tmp_input_data_str.replace(/ /g, '');
    let input_data = tmp_input_data_str.split('\n');
    const input = {
      sampling_freq: sfreq,
      freq_pass: [freq1_pass, freq2_pass],
      freq_cutoff: [freq1_cutoff, freq2_cutoff],
      gain_pass: gain_pass,
      gain_cutoff: gain_cutoff,
      data: input_data,
    };
    console.log(input);
    const res = await fetch(
      `${process.env.DOMAIN_BACKEND}${process.env.SUBDIR_BACKEND}/get_information`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(input),
      }
    ).catch(() => null);
    if (res == null) {
      alert('Error');
      return;
    }
    const json_data = await res.json().catch(() => null);
    console.log(json_data);
    if (json_data['result'] == undefined) {
      alert('Server Error');
      return;
    }
    const obj = json_data['result'];

    setCoefA(obj['a'].replace('[ ', '').replace(']', '').replace(/ +/g, ','));
    setCoefB(obj['b'].replace('[ ', '').replace(']', '').replace(/ +/g, ','));
    setOutput_data_str(
      obj['filterd'].replace('[', '').replace(']', '').replace(/ +/g, '').replace(/,/g, '\n')
    );
    setFilterd_img_src(obj['filterd_img']);
  };

  return (
    <div>
      <Head>
        <title>Try Disital Filter</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="w-screen min-h-screen from-cyan-400 bg-gradient-to-br to-blue-500">
        <div className="max-w-4xl flex flex-col items-center justify-center pt-12 mx-auto">
          <div className="flex flex-row items-center justify-between space-x-16">
            <div className="flex flex-col items-center justify-center space-y-8">
              <div>
                <p>サンプリング周波数(Hz)</p>
                <input type="text" placeholder="" value={sfreq} onChange={handleSfreqChanged} />
              </div>
              <div>
                <p>通過周波数(Hz)</p>
                <input
                  type="text"
                  placeholder=""
                  value={freq1_pass}
                  onChange={handleFreq1_passChanged}
                />
                <div className="my-2"></div>
                <input
                  type="text"
                  placeholder=""
                  value={freq2_pass}
                  onChange={handleFreq2_passChanged}
                />
              </div>
              <div>
                <p>カットオフ周波数(Hz)</p>
                <input
                  type="text"
                  placeholder=""
                  value={freq1_cutoff}
                  onChange={handleFreq1_cutoffChanged}
                />
                <div className="my-2"></div>
                <input
                  type="text"
                  placeholder=""
                  value={freq2_cutoff}
                  onChange={handleFreq2_cutoffChanged}
                />
              </div>
              <div>
                <p>通過ゲイン(Hz)</p>
                <input
                  type="text"
                  placeholder=""
                  value={gain_pass}
                  onChange={handleGain_passChanged}
                />
              </div>
              <div>
                <p>遮断ゲイン(Hz)</p>
                <input
                  type="text"
                  placeholder=""
                  value={gain_cutoff}
                  onChange={handleGain_cutoffChanged}
                />
              </div>
            </div>
            <div className="h-full">
              <p>データを入力してください</p>
              <textarea
                className="h-[360px]"
                value={input_data_str}
                onChange={handleInput_data_strChanged}
              ></textarea>
              <div>
                <button
                  className="px-4 py-2 bg-gray-600 rounded-md text-white w-full mt-4"
                  onClick={handleCalculateButtonClicked}
                >
                  計算
                </button>
              </div>
            </div>
            <div className="h-full">
              <p>係数a</p>
              <input type="text" placeholder="" value={coefA} />

              <p>係数b</p>
              <input type="text" placeholder="" value={coefB} />
              <p>フィルタ後データ</p>
              <textarea className="h-[360px]" value={output_data_str}></textarea>
            </div>
          </div>

          <div className="mt-8 w-full">
            <img src={`data:image/jpeg;base64,${filterd_img_src}`} />
          </div>
        </div>
      </div>
    </div>
  );
}
